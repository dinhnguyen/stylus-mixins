wh(w, h)
	width: w
	height: h
min-w()
	min-width: arguments
max-w()
	max-width: arguments
min-h()
	min-height: arguments
max-h()
	max-height: arguments
z()
	z-index: arguments
w()
	width: arguments
h()
	height: arguments
pos()
	position: arguments
t()
	top: arguments
l()
	left: arguments
b()
	bottom: arguments
r()
	right: arguments
tl(t, l)
	top: t
	left: l
tr(t, r)
	top: t
	right: r
br(b, r)
	bottom: b
	right: r
bl(b, l)
	bottom: b
	left: l
fl()
	float: arguments
bg()
	background: arguments
bgc()
	background-color: arguments
bgr()
	background-repeat: arguments
c()
	color: arguments
fo()
	font: arguments
fo-s()
	font-size: arguments
fo-w()
	font-weight: arguments
fo-f()
	font-family: arguments
lh()
	line-height: arguments
dis()
	display: arguments
bor()
	border: arguments
bor-r()
	border-right: arguments
bor-l()
	border-left: arguments
bor-t()
	border-top: arguments
bor-b()
	border-bottom: arguments
bor-radius()
	border-radius: arguments
	-moz-border-radius: arguments
	-webkit-border-radius: arguments
bor-radius-br()
	-webkit-border-bottom-right-radius: arguments
	-moz-border-radius-bottomright: arguments
	border-bottom-right-radius: arguments
bor-radius-bl()
	-webkit-border-bottom-left-radius: arguments
	-moz-border-radius-bottomleft: arguments
	border-bottom-left-radius: arguments
bor-radius-tr()
	-webkit-border-top-right-radius: arguments
	-moz-border-radius-topright: arguments
	border-top-right-radius: arguments
bor-radius-tl()
	-webkit-border-top-left-radius: arguments
	-moz-border-radius-topleft: arguments
	border-top-left-radius: arguments
mar()
	margin: arguments
mar-t()
	margin-top: arguments
mar-l()
	margin-left: arguments
mar-b()
	margin-bottom: arguments
mar-r()
	margin-right: arguments
pad()
	padding: arguments
pad-t()
	padding-top: arguments
pad-l()
	padding-left: arguments
pad-b()
	padding-bottom: arguments
pad-r()
	padding-right: arguments
tex-a()
	text-align: arguments
tex-i()
	text-indent: arguments
tex-deco()
	text-decoration: arguments
tex-trans()
	text-transform: arguments
cur()
	cursor: arguments
over()
	overflow: arguments
ver-a()
	vertical-align: arguments
box-shadow()
	-webkit-box-shadow n
	-moz-box-shadow n
	box-shadow n
opa(n)
	zoom 1
	opacity n
	filter unquote('progid:DXImageTransform.Microsoft.Alpha(Opacity=' + round(n * 100) + ')')

// Flexbox mixins
flex()
	display: flex

flex-dir()
	flex-direction: arguments

flex-wrap()
	flex-wrap: arguments

flex-flow(dir, wrap)
	flex-flow: dir wrap

justify()
	justify-content: arguments

align-items()
	align-items: arguments

align-content()
	align-content: arguments

align-self()
	align-self: arguments

flex-grow()
	flex-grow: arguments

flex-shrink()
	flex-shrink: arguments

flex-basis()
	flex-basis: arguments

// Grid mixins
grid()
	display: grid

grid-template-cols()
	grid-template-columns: arguments

grid-template-rows()
	grid-template-rows: arguments

grid-template-areas()
	grid-template-areas: arguments

grid-gap()
	grid-gap: arguments

grid-column-gap()
	grid-column-gap: arguments

grid-row-gap()
	grid-row-gap: arguments

// Transform mixins
transform()
	-webkit-transform: arguments
	-moz-transform: arguments
	-ms-transform: arguments
	-o-transform: arguments
	transform: arguments

rotate(deg)
	transform: rotate(deg)

scale(n)
	transform: scale(n)

translate(x, y)
	transform: translate(x, y)

translateX()
	transform: translateX(arguments)

translateY()
	transform: translateY(arguments)

// Transition mixins
transition()
	-webkit-transition: arguments
	-moz-transition: arguments
	-ms-transition: arguments
	-o-transition: arguments
	transition: arguments

// Animation mixins
animation()
	-webkit-animation: arguments
	-moz-animation: arguments
	-ms-animation: arguments
	-o-animation: arguments
	animation: arguments

// Media query mixins
mobile()
	@media screen and (max-width: 480px)
		{block}

tablet()
	@media screen and (min-width: 481px) and (max-width: 1024px)
		{block}

desktop()
	@media screen and (min-width: 1025px)
		{block}

// Visibility mixins
hide()
	display: none

show()
	display: block

vis()
	visibility: arguments

// Text mixins
ellipsis()
	white-space: nowrap
	overflow: hidden
	text-overflow: ellipsis

word-wrap()
	word-wrap: break-word
	overflow-wrap: break-word

// Filter mixins
filter()
	-webkit-filter: arguments
	-moz-filter: arguments
	-ms-filter: arguments
	filter: arguments

blur(radius)
	filter: blur(radius)

grayscale(amount)
	filter: grayscale(amount)

// User select mixins
user-select(value)
	-webkit-user-select: value
	-moz-user-select: value
	-ms-user-select: value
	user-select: value

// Appearance mixins
appearance(value)
	-webkit-appearance: value
	-moz-appearance: value
	appearance: value

// CSS Variables mixins
var(name, value)
	--{name}: value
	
get-var(name)
	var(--{name})

// Backdrop filter mixins
backdrop-filter()
	-webkit-backdrop-filter: arguments
	backdrop-filter: arguments

backdrop-blur(radius)
	backdrop-filter: blur(radius)

// Scrollbar mixins
scrollbar(width, track-color, thumb-color)
	&::-webkit-scrollbar
		width: width
	&::-webkit-scrollbar-track
		background: track-color
	&::-webkit-scrollbar-thumb
		background: thumb-color
		border-radius: 4px
	&::-webkit-scrollbar-thumb:hover
		background: darken(thumb-color, 10%)

// Gradient mixins
linear-gradient(direction, color-stops...)
	background-image: linear-gradient(direction, color-stops)

radial-gradient(shape, color-stops...)
	background-image: radial-gradient(shape, color-stops)

// Clipping and masking mixins
clip-path(value)
	-webkit-clip-path: value
	clip-path: value

circle-clip(radius)
	clip-path: circle(radius at center)

polygon-clip(points...)
	clip-path: polygon(points)

// Typography mixins
font-face(family, file, weight = 400, style = normal)
	@font-face
		font-family: family
		src: url(file + '.woff2') format('woff2'),
			 url(file + '.woff') format('woff')
		font-weight: weight
		font-style: style
		font-display: swap

// Advanced text styling
text-stroke(width, color)
	-webkit-text-stroke-width: width
	-webkit-text-stroke-color: color

text-fill-color(color)
	-webkit-text-fill-color: color

// Responsive image mixins
responsive-img()
	max-width: 100%
	height: auto

object-fit(value)
	object-fit: value

// Aspect ratio mixins
aspect-ratio(width, height)
	position: relative
	&:before
		content: ''
		display: block
		padding-top: (height / width) * 100%

// Positioning mixins
center-absolute()
	position: absolute
	top: 50%
	left: 50%
	transform: translate(-50%, -50%)

center-flex()
	display: flex
	justify-content: center
	align-items: center

// Animation keyframes helper
keyframes(name)
	@keyframes name
		{block}

// Advanced animation mixins
fade-in(duration = 0.3s)
	animation: fadeIn duration ease
	@keyframes fadeIn
		from
			opacity: 0
		to
			opacity: 1

fade-out(duration = 0.3s)
	animation: fadeOut duration ease
	@keyframes fadeOut
		from
			opacity: 1
		to
			opacity: 0

slide-in(direction = 'left', distance = 20px, duration = 0.3s)
	if direction == 'left'
		animation: slideInLeft duration ease
		@keyframes slideInLeft
			from
				transform: translateX(-(distance))
				opacity: 0
			to
				transform: translateX(0)
				opacity: 1
	else if direction == 'right'
		animation: slideInRight duration ease
		@keyframes slideInRight
			from
				transform: translateX(distance)
				opacity: 0
			to
				transform: translateX(0)
				opacity: 1
	else if direction == 'top'
		animation: slideInTop duration ease
		@keyframes slideInTop
			from
				transform: translateY(-(distance))
				opacity: 0
			to
				transform: translateY(0)
				opacity: 1
	else if direction == 'bottom'
		animation: slideInBottom duration ease
		@keyframes slideInBottom
			from
				transform: translateY(distance)
				opacity: 0
			to
				transform: translateY(0)
				opacity: 1

// Print media query
print()
	@media print
		{block}

// Dark mode media query
dark-mode()
	@media (prefers-color-scheme: dark)
		{block}

light-mode()
	@media (prefers-color-scheme: light)
		{block}

// Accessibility mixins
visually-hidden()
	position: absolute
	width: 1px
	height: 1px
	padding: 0
	margin: -1px
	overflow: hidden
	clip: rect(0, 0, 0, 0)
	white-space: nowrap
	border: 0

focus-visible()
	&:focus-visible
		{block}

// Container queries
container-query(name, condition)
	@container name condition
		{block}

// Logical properties mixins
margin-inline(value)
	margin-inline: value

margin-block(value)
	margin-block: value

padding-inline(value)
	padding-inline: value

padding-block(value)
	padding-block: value

// Color manipulation mixins
lighten-color(color, amount)
	lighten(color, amount)

darken-color(color, amount)
	darken(color, amount)

alpha-color(color, amount)
	rgba(color, amount)

// Grid layout shortcuts
grid-cols(count, gap = 1rem)
	display: grid
	grid-template-columns: repeat(count, 1fr)
	grid-gap: gap

auto-grid(min-size, gap = 1rem)
	display: grid
	grid-template-columns: repeat(auto-fill, minmax(min-size, 1fr))
	grid-gap: gap

// Truncate text with custom line count
truncate-lines(lines = 2)
	display: -webkit-box
	-webkit-line-clamp: lines
	-webkit-box-orient: vertical
	overflow: hidden
	text-overflow: ellipsis

// Z-index layers management
z-layer(layer)
	z-index: layer

// Smooth scrolling
smooth-scroll()
	scroll-behavior: smooth

// Touch action
touch(value)
	touch-action: value

// Z-index layers management
z-layer(layer)
	z-index: layer

// Smooth scrolling
smooth-scroll()
	scroll-behavior: smooth

// Touch action
touch(value)
	touch-action: value
